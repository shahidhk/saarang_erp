{"ts":1375579165146,"silentsave":true,"restoring":false,"patch":[[{"diffs":[[1,"from django.http import Http404, HttpResponse, HttpResponseRedirect, HttpResponseForbidden\nfrom django.shortcuts import render_to_response, render, get_object_or_404, redirect\nfrom django.contrib.auth import authenticate, login, logout\nfrom django.contrib.auth.decorators import login_required\nfrom django.template import RequestContext\nfrom django.contrib.auth.models import User, Group\nfrom django.contrib import messages\nfrom forum.models import Forum, Topic, Post\nfrom django.db.models import Q, F\nimport datetime\nfrom forum.forms import AddTopicForm, AddPostForm\nfrom userprofile.models import UserProfile\nfrom userprofile.forms import UserProfileForm\n\n@login_required(login_url='/login/')\ndef index(request):\n    html='Hello %s , Welcome to saarang erp ' % request.user.username\n    print html\n    forums=Forum.objects.all()\n    user=request.user\n    to_return = {\n            'forums': forums,\n            'posts': Post.objects.count(),\n            'topics': Topic.objects.count(),\n            }\n    return render(request, 'forum/forum.html', to_return)\n\n@login_required(login_url='/login/')\ndef show_forum(request, forum_id):\n    '''\n    html='i got %d' % int(forum_id)\n    return HttpResponse(html)'''\n    forum = get_object_or_404(Forum, pk=forum_id)\n    #if not forum.category.has_access(request.user):\n        #   return HttpResponseForbidden()\n    topics = forum.topics.order_by('-updated').select_related()\n    to_return = {\n                'forum': forum,\n                'posts': forum.post_count,\n                'topics': topics,\n                }   \n    for j in topics:\n        print j\n \n    return render(request, 'forum/show_forum.html', to_return)\n\n#Topic\n@login_required(login_url='/login/')\ndef show_topic(request, topic_id):\n    '''html='i got %d' % int(topic_id)\n    return HttpResponse(html)'''\n    post_request = request.method == \"POST\"\n    user_is_authenticated = request.user.is_authenticated()\n    if post_request and not user_is_authenticated:\n        # Info: only user that are logged in should get forms in the page.\n        return HttpResponseForbidden()\n\n    topic = get_object_or_404(Topic.objects.select_related(), pk=topic_id)\n    Topic.objects.filter(pk=topic.id).update(views=F('views') + 1)\n\n    last_post = topic.last_post\n\n    #if request.user.is_authenticated():\n    #    topic.update_read(request.user)\n    posts = topic.posts.all().select_related()\n    for i in posts:\n        # This will truncates the description if it is greater than 100 characters and adds some dots\n        i.description = (i.description[:100] + \" ....\") if len(i.description) > 100 else i.description\n    to_return = {\n                'topic': topic,\n                'post_count': topic.post_count,\n                'posts': posts,\n                }\n    return render(request, 'forum/show_topic.html', to_return)\n\n@login_required(login_url='/login/')\ndef add_topic(request, forum_id):\n    '''Adds a new task to the department forum'''\n    forum = get_object_or_404(Forum, pk=forum_id)\n    if request.method == 'POST':\n        form=AddTopicForm(request.POST)\n        if form.is_valid():\n            data=form.save(commit=False)\n            data.forum=forum\n            data.creator=request.user\n            forum.topic_count+=1\n            data.save()\n            forum.save()\n            return redirect('forum.views.add_post',topic_id=data.pk)\n        else:\n            for error in form.errors:\n                pass\n    else:\n        form=AddTopicForm()\n    return render(request, 'forum/add.html',{'form':form})\n\n@login_required(login_url='/login/')\ndef add_post(request, topic_id):\n    topic = get_object_or_404(Topic, pk=topic_id)\n    profile = get_object_or_404(UserProfile, pk=request.user.id)\n    if request.method == 'POST':\n        form=AddPostForm(request.POST)\n        if form.is_valid():\n            profile.post_count+=1\n            profile.save()\n            data=form.save(commit=False)\n            data.user=request.user\n            data.topic=topic\n            data.save()\n            topic.updated=datetime.datetime.now()\n            topic.post_count+=1\n            topic.last_post=data\n            topic.save()\n            print topic.forum.pk\n            forum = get_object_or_404(Forum, pk=topic.forum.pk)\n            print forum\n            forum.post_count+=1\n            forum.last_post=data\n            forum.save()\n            print data.pk\n            return redirect('forum.views.show_topic', topic_id = topic.pk)\n        else:\n            for error in form.errors:\n                messages.warning(request, error)\n    else:\n        form=AddPostForm()\n    return render(request, 'forum/add.html',{'form':form})\n\ndef delete_posts(request, topic_id):\n    html='i got %d' % int(topic_id)\n    return HttpResponse(html)\n\ndef open_close_topic(request, topic_id, action):\n    html='i got %d and %s' % (int(topic_id),str(action))\n    return HttpResponse(html)\n\ndef show_post(request, post_id):\n    post= get_object_or_404(Post, pk=post_id)\n    return render(request, 'forum/show_post.html',{'post':post})\n\ndef edit_post(request, post_id):\n    html='i got %d' % int(post_id)\n    return HttpResponse(html)\n\ndef delete_post(request, post_id):\n    html='i got %d' % int(post_id)\n    return HttpResponse(html)\n"]],"start1":0,"start2":0,"length1":0,"length2":5247}]],"length":5247}
